;;; Exercise 1.32

(define (identity x) x)
(define (inc x) (+ x 1))
(define (square x) (* x x))
(define (mult x y) (* x y))


(define (product f lo hi)
  (if (> lo hi)
      1
      (* (f lo) (product f (+ lo 1) hi))))


(define (accumulate comb
                    null-value
                    term
                    a
                    next
                    b)
  (define (comb x y)
    (comb x y))
  (if (> a b)
      null-value
      (comb (term a) (accumulate comb
                                 null-value
                                 term
                                 (next a)
                                 next
                                 b))))

(accumulate mult 1 identity 0 inc 4)